"""
파이썬에서는 튜플이라는 자료형도 제공이 된다.
튜플은 리스트처럼 요소를 일렬로 저장하지만, 
안에 저장된 요소를 변경,추가,삭제를 할 수 없다. 
간단하게 읽기 전용 리스트라고 할 수 있다. 

변수에 값을 저장할 때 ()로 묶어주면 튜프리 되며, 
각 값을 ,로 구분한다. 또는 괄호로 묶지 않고 값만 콤마로 구분해도 튜플이 된다.

"""


tuple_array1 = (38, 21, 53, 62, 19)
print(tuple_array1)

tuple_array2 = 38, 21, 53, 62, 19
print(tuple_array2)


person = ('james', 17, 175.3, True) 
print(person)


"""
튜플도 리스트처럼 여러 자료형을 섞어서 저장해도 된다. 
튜플은 요소가 절대 변경되지 않고 유지되어야 할 때 사용한다. 
튜플을 만든 상태에서 요소를 변경하게 되면 에러가 발생한다.
따라서 요소를 실수로 변경하는 상황을 방지할 수 있다. 
"""


"""
요소가 한 개 들어있는 튜플 만들기 
값 한 개를 괄호로 묶으면 튜플이 아니라 그냥 값이 된다. 
요소가 한 개인 튜플을 만들 때는 ()안에 값 한 개를 넣고, ','를 붙인다. 
또는 괄호로 묶지 넣고 값 한 개에 ','를 붙여도 된다. 
그런데 왜 튜플에 요소 한 개인 것을 만들까?
함수를 사용하다 보면 값이 아닌 튜플을 넣어야 할 때가 있다.
이 때 값은 한 개지만 튜플로 넣어야 할 때 이런 방식을 사용한다.
그냥 튜플 형태를 유지하기 위한 문법이다.      
"""

print((38,))



"""
range를 이용해 튜플 만들기 
이번에는 range를 사용하여 튜플을 만드는 방법이다. 
다음과 같이 tuple 안에 range를 넣으면 tuple이 생긴다.    
    
"""
tuple_array1 = tuple(range(10))
print(tuple_array1)

tuple_array2 = tuple(range(5,12))  
print(tuple_array2)


tuple_array3 = tuple(range(-4,10,2))
print(tuple_array3)

"""
튜플과 리스트는 요소를 변경, 추가, 삭제할 수 있는지 없는지에 따라 구분된다.
따라서 튜플로 리스트를 만들거나 리스트를 튜플로 만들 수도 있다.     
    
"""

string_list = list("Hello")
string_tuple = tuple("Hello")
print(string_list)
print(string_tuple)

"""
리스트와 튜플을 사용하면 변수 여러 개를 한 번에 만들 수 있다. 
이 때 변수의 개수와 리스트의 요소 개수는 같아야 한다. 
리스트와 튜플 변수로도 변수 여러 개를 만들 수 있다. 
다음과 같이 리스트와 튜플의 요소를 
변수 여러 개에 할당하는 것을 리스트 언팩킹, 튜플 언팩킹이라고 한다


    
"""

a,b,c = [1,2,3]
print(a,b,c)

d,e,f = (4,5,6)
print(d,e,f)

x = [1,2,3]
a,b,c = x
print(a,b,c)
y = (4,5,6)
d,e,f = y
print(d,e,f)